const o=`{% block aggro_entity_list %} <sw-page class="aggro-entity-list"> {% block aggro_entity_list_search_bar %} <template #search-bar> <sw-search-bar :initial-search-type="entity" :initial-search="term" @search="onSearch" /> </template> {% endblock %} {% block aggro_entity_list_smart_bar_header %} <template #smart-bar-header> {% block aggro_entity_list_smart_bar_header_title %} <h2> {% block aggro_entity_list_smart_bar_header_title_text %} {{ $tc(labels.header) }} {% endblock %} {% block aggro_entity_list_smart_bar_header_amount %} <span v-if="!isLoading" class="sw-page__smart-bar-amount" > ({{ total }}) </span> {% endblock %} </h2> {% endblock %} </template> {% endblock %} {% block aggro_entity_list_smart_bar_actions %} <template #smart-bar-actions> {% block aggro_entity_list_smart_bar_actions_add %} <sw-button v-tooltip="{ message: $tc('sw-privileges.tooltip.warning'), disabled: acl.can(entity+'.creator'), showOnDisabledElements: true }" class="aggro-entity-list__button-create" variant="primary" :disabled="!acl.can(entity+'.creator') || undefined" :router-link="{ name: links.create }" > {{ $tc(labels.add) }} </sw-button> {% endblock %} </template> {% endblock %} <template #language-switch> <sw-language-switch @on-change="onChangeLanguage" /> </template> <template #content> {% block aggro_entity_list_content %} <div class="aggro-entity-list__content"> {% block aggro_entity_list_grid %} <sw-entity-listing v-if="isLoading || (entities && entitySearchable)" ref="aggroEntityGrid" class="aggro-entity-list-grid" identifier="aggro-entity-list" :items="entities" :columns="entityColumns" :repository="entityRepository" :sort-by="currentSortBy" :sort-direction="sortDirection" :detail-route="links.detail" :show-selection="acl.can(entity+'.deleter')" :allow-inline-edit="acl.can(entity+'.editor') || undefined" :allow-bulk-edit="acl.can(entity+'.editor')" :is-loading="isLoading" :disable-data-fetching="true" @selection-change="updateSelection" @inline-edit-save="onInlineEditSave" @page-change="onPageChange" @column-sort="onSortColumn" @bulk-edit-modal-open="onBulkEditModalOpen" > {% block aggro_entity_list_grid_columns_actions %} <template #actions="{ item }"> {% block aggro_entity_list_grid_columns_actions_edit %} <sw-context-menu-item class="aggro-entity-list__edit-action" :disabled="!acl.can(entity+'.editor') || undefined" :router-link="{ name: links.detail, params: { id: item.id }, query: { edit: true } }" > {{ $tc('aggro.entity-list.contextMenuEdit') }} </sw-context-menu-item> {% endblock %} {% block aggro_entity_list_grid_columns_actions_delete %} <sw-context-menu-item class="aggro-entity-list__delete-action" variant="danger" :disabled="!acl.can(entity+'.deleter') || undefined" @click="onDelete(item.id)" > {{ $tc('aggro.entity-list.contextMenuDelete') }} </sw-context-menu-item> {% endblock %} </template> {% endblock %} {% block aggro_entity_list_grid_action_modals %} <template #action-modals="{ item }"> {% block aggro_entity_list_delete_modal %} <sw-modal v-if="showDeleteModal === item.id" :title="$tc('global.default.warning')" variant="small" @modal-close="onCloseDeleteModal" > {% block aggro_entity_list_delete_modal_confirm_delete_text %} <p class="aggro-entity-list__confirm-delete-text"> {{ $tc('aggro.entity-list.textDeleteConfirm') }} </p> {% endblock %} {% block aggro_entity_list_delete_modal_footer %} <template #modal-footer> {% block aggro_entity_list_delete_modal_cancel %} <sw-button size="small" @click="onCloseDeleteModal" > {{ $tc('global.default.cancel') }} </sw-button> {% endblock %} {% block aggro_entity_list_delete_modal_confirm %} <sw-button variant="danger" size="small" @click="onConfirmDelete(item.id)" > {{ $tc('aggro.entity-list.buttonDelete') }} </sw-button> {% endblock %} </template> {% endblock %} </sw-modal> {% endblock %} </template> {% endblock %} <template #pagination> {% block sw_order_list_grid_pagination %} <sw-pagination :page="page" :limit="limit" :total="total" :total-visible="7" @page-change="onPageChange" /> {% endblock %} </template> {% block aggro_entity_list_bulk_edit_modal %} <template #bulk-edit-modal="{ selection }" > <sw-bulk-edit-modal v-if="showBulkEditModal" ref="bulkEditModal" class="aggro-entity-list-bulk-edit-modal" :selection="selection" :bulk-grid-edit-columns="entityColumns" @edit-items="onBulkEditItems" @modal-close="onBulkEditModalClose" > </sw-bulk-edit-modal> </template> {% endblock %} </sw-entity-listing> {% endblock %} {% block aggro_entity_list_empty_state %} <template v-if="!isLoading && !total"> <sw-empty-state v-if="filterCriteria.length || isValidTerm(term)" :title="$tc('sw-empty-state.messageNoResultTitle')" > <template #icon> <img :src="assetFilter('/administration/static/img/empty-states/customer-empty-state.svg')" :alt="$tc('sw-empty-state.messageNoResultTitle')" > </template> <template #default> {{ $tc('sw-empty-state.messageNoResultSublineBefore') }} <router-link class="sw-empty-state__description-link" :to="{ name: 'sw.profile.index.searchPreferences' }" > {{ $tc('sw-empty-state.messageNoResultSublineLink') }} </router-link> {{ $tc('sw-empty-state.messageNoResultSublineAfter') }} </template> </sw-empty-state> <sw-empty-state v-else :title="$tc('aggro.entity-list.messageEmpty')" > <template #icon> <img :src="assetFilter('/administration/static/img/empty-states/customer-empty-state.svg')" :alt="$tc('aggro.entity-list.messageEmpty')" > </template> </sw-empty-state> </template> {% endblock %} </div> {% endblock %} </template> {% block aggro_entity_list_sidebar %} <template #sidebar> <sw-sidebar class="aggro-entity-list__sidebar"> {% block aggro_entity_list_sidebar_refresh %} <sw-sidebar-item icon="regular-undo" :title="$tc('aggro.entity-list.titleSidebarItemRefresh')" @click="onRefresh" /> {% endblock %} {% block aggro_entity_list_sidebar_filter %} <sw-sidebar-filter-panel :entity="entity" :store-key="storeKey" :filters="listFilters" :defaults="defaultFilters" :active-filter-number="activeFilterNumber" @criteria-changed="updateCriteria" /> {% endblock %} </sw-sidebar> </template> {% endblock %} </sw-page> {% endblock %}`,{Mixin:i}=Shopware,{Criteria:a}=Shopware.Data;Shopware.Utils;const r={template:o,props:{entity:String,labels:Object,links:Object,columns:Array},inject:["repositoryFactory","acl","filterFactory","feature"],mixins:[i.getByName("notification"),i.getByName("salutation"),i.getByName("listing")],data(){return{entities:null,sortBy:"",naturalSorting:!0,sortDirection:"DESC",isLoading:!1,showDeleteModal:!1,filterLoading:!1,filterCriteria:[],defaultFilters:[],activeFilterNumber:0,searchConfigEntity:"customer",showBulkEditModal:!1}},metaInfo(){return{title:this.$createTitle()}},computed:{entityRepository(){return this.repositoryFactory.create(this.entity)},entityColumns(){return this.getEntityColumns()},storeKey(){return"aggro-plugin-core.filter."+this.entity},defaultCriteria(){const t=new a(this.page,this.limit);return t.setTerm(this.term),this.sortBy.split(",").filter(e=>e).forEach(e=>{t.addSorting(a.sort(e,this.sortDirection,this.naturalSorting))}),this.filterCriteria.forEach(e=>{t.addFilter(e)}),t},filterSelectCriteria(){return new a(1,1)},listFilterOptions(){return{}},listFilters(){return this.filterFactory.create(this.entity,this.listFilterOptions)},assetFilter(){return Shopware.Filter.getByName("asset")}},watch:{defaultCriteria:{handler(){this.getList()},deep:!0}},created(){this.createdComponent()},methods:{createdComponent(){return this.loadFilterValues()},onInlineEditSave(t,e){t.then(()=>{this.createNotificationSuccess({message:this.$tc("aggro-plugin-core.detail.messageSaveSuccess",0,{name:"foobar"})})}).catch(()=>{this.getList(),this.createNotificationError({message:this.$tc("aggro-plugin-core.detail.messageSaveError")})})},async getList(){var l;this.isLoading=!0;const t=await Shopware.Service("filterService").mergeWithStoredFilters(this.storeKey,this.defaultCriteria),e=await this.addQueryScores(this.term,t);if(this.activeFilterNumber=((l=t.filters)==null?void 0:l.length)||0,!this.entitySearchable){this.isLoading=!1,this.total=0;return}this.freshSearchTerm&&e.resetSorting();try{const s=await this.entityRepository.search(e);this.total=s.total,this.entities=s,this.isLoading=!1,this.selection={}}catch{this.isLoading=!1}},onDelete(t){this.showDeleteModal=t},onCloseDeleteModal(){this.showDeleteModal=!1},onConfirmDelete(t){return this.showDeleteModal=!1,this.entityRepository.delete(t).then(()=>{this.getList()})},async onChangeLanguage(){await this.createdComponent(),await this.getList()},getEntityColumns(){return this.columns},loadFilterValues(){return this.filterLoading=!0,this.entityRepository.search(this.filterSelectCriteria).then(({aggregations:t})=>(this.filterLoading=!1,t)).catch(()=>{this.filterLoading=!1})},updateCriteria(t){this.page=1,this.filterCriteria=t},async onBulkEditItems(){await this.$nextTick(),this.$router.push({name:"aggro.bulk.edit.entity"})},onBulkEditModalOpen(){this.showBulkEditModal=!0},onBulkEditModalClose(){this.showBulkEditModal=!1}}};export{r as default};
